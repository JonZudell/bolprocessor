Bol Processor BP3 To Do List
============================

General
-------

- use only UTF-8 text encoding for text output


Documentation
-------------
- write new docs for BP3 (command-line usage, differences, etc.)
- rewrite the source code README
- convert BP2 documentation to an (open-source) authoring system that can help maintain the organization & internal links as well as output in multiple formats (HTML, PDF, etc.) ??
- reorganize & rewrite BP2 documentation


Actions
-------

- implement produce-items N action
- implement play, play-item, play-all actions
- fix analyze-item action
- implement expand-item & show-beats actions
- new action for listing RT MIDI devices ?


Input files
-----------

- fix crash when loading a glossary file
- fix crash when grammar contains script commands
- support UTF-8 text encoding for input files & output
- implement the -s/-S options for specifying the start string
- identify intput files with prefixes even when they are preceded by a path
- restore the feature that looks for names of related files in the input files and auto-loads them (to be discussed...)


MIDI files
----------

- add code to write track names
- write 2 bytes of MIDIfileTrackNumber instead of 1 so that more than 255 tracks are possible;  add error checking to make sure it doesn't exceed 32,767(?)
- reimplement the function ReadVarLen()
- should "produce all" write each item to its own track in a type 2 file?  (Currently writes all items to the same track).
- close midi files at the end of MakeSound() ? (and reopen if for each item?)
- when writing a type 2 file, an empty track is written and the end of the file but it not counted in the final track count that is written when closing the file; best solution would be to avoid writing the track or truncate the file?
- fix or remove the handling of FileSaveMode in PrepareMIDIFile()? The option is currently always set to ALLSAME by Inits() and LoadSettings().
- remove  "('-' for stdout)" text from --midiout help?  Piping MIDI files probably won't work because we use ftell/fseek to write some parts of the file.
(Alternatively, could support dumping MIDI file in a text format to stdout?)


Real-time MIDI
--------------

- revise CoreMIDI driver and allow optionally building with it on Mac OS X
- change the "null driver" to output MIDI messages as text
- write a new cross-platform MIDI driver using the PortMIDI(?) library

Images
--------------

- if no settings file is used, allow the creation of images via a command line option. This option should specify a location for images. Currently, the location is identical to the location of the trace file.


Microtonal scales
----------------
Fix "Raise all notes by integer ratio"
Fix tuning scheme, sometimes notes appear several times, sometimes not
Implement meantone temperament in compliance with models described by Pierre-Yves Asselin
Check scales in which the "octave" is not 2/1
Implement performance control to change A4 frequency (diapason) in the score

