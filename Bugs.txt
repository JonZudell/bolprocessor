Here is a short list of known issues since I began working on the project:

- Level 3 & 4 optimization in CWpro4 seem to be breaking some things.  Most
noticeably, selecting "New Project" causes an infinite loop in setting the
Midi output port?

- Several "variable used before initialized" warnings should be investigated.

- These dialogs cannot be closed with Command-W: Tuning, Default performance
values, Default strike mode, and File Save Preferences.

- importing a long Csound score into a sound-prototype (with large time values)
results in a lot of "overflow" messages in the Trace window.  Pressing Command-.
during this output brings up the Resume/Stop dialog and choosing Stop then 
_starts_ a silent performance for a length of time. (Equal to last performance 
length?) ??

- I had a fatal system crash ("bomb" dialog) while using the sound prototypes
window.  First, opened prototypes, then added some names to an alphabet.  Then
did search and replace on alphabet names.  Closed alphabet window, no save, 
then said no when it asked me to load -mi file, then trying to browse through
prototypes caused a crash.

- Are MIDIfileOpened and other related globals being reset after deleting an
aborted file write?

- FlushVolume() seems wrong; could just use FlushVol from Toolbox instead.

- Crashes if too much text is inserted into a TextEdit buffer.

- BP2 crashes if you press the "Piano roll" button in the Object prototypes
window several times in a row.  (tries to dispose of several empty handles
in MakeSound() first).

- Colored text displays as black on OS X.

- TEToScrap() does not work on OS X; Cut and Copy commands may not work
  correctly all of the time (especially to/from other apps). (Made an attempt
  at fixing this -- needs more testing).

- Auto-scrolling in text windows (by dragging beyond the current view rect)
  does not move the scroll bar.  (TE or WASTE)

- TE windows do not always display all text in the same font size. (Fixed?)

- Mouse downs in Control Panel & Script Control dialogs are processed as "hits"
  even if the user drags out of the control to cancel the click.  This does not
  happen if the dialog is an inactive window.  Buttons in other dialogs "flash"
  after cancelling a click but their actions are not taken.

- With TextEdit, BP2 uses TextCopy() to save the last character deleted with
  the delete key.  This replaces the contents of the clipboard, of course, 
  which should not happen.  (See about line 630 in Interface1.c -- the keyDown
  case of DoEvent()).

- Selecting a miscellaneous dialog (one not in gpDialogs[]) when a text window
  is active leaves the edit record active.  With "Default strike mode", this 
  allows typing, deleting, pasting, etc. in the last edit window.

- In general, many menu/key commands work in the previously selected window
  after selecting a miscellaneous dialog.  (This may be desirable in some
  cases ?? but certainly not in all).

- When a miscellaneous dialog is the active window, the insertion point only 
  blinks in edit boxes if the mouse cursor is over the window.  Also if the
  previously active window was a text window, the insertion point continues
  to blink in that window.
 
- Probably should make it so that the message and info windows are not able to
  be selected as the front window.  (It is useful to do so to change their text
  size but then the window is usually not tall enough anyways).
  
- BringToFront() seems to work differently on OS X, causing the currently 
  highlighted window to be unselected.  This is problematic with the 
  message window during playback because it becomes very difficult to keep
  a window active long enough to do anything in it.  Perhaps using 
  SendBehind(FrontWindow()) would be a good workaround until we can make 
  real floating windows.

- Arrow keys do not move properly when some text is already selected.

