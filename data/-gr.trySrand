// Bol Processor version BP2.8.1
// Grammar file saved as '-gr.trySrand'. Date: Dim 3 Mai 1998 -- 23:57
-ho.tryKeyXpand
-se.trySrand
RND
_mm(60.0000) _striated
_randomize [Reseed the random sequence with an arbitrary number]

gram#1[1] S --> /5 A B C D E
gram#1[2] A --> {_rndseq C3 B3 E3 F3 G3}
gram#1[3] B --> {_srand(1) _rndseq C4 B4 E4 F4 G4}
gram#1[4] C -->  _randomize {_rndseq C4 B4 E4 F4 G4}{_rndseq C5 B5 E5 F5 G5}
gram#1[5] D --> {_srand(1) _rndseq C5 B5 E5 F5 G5}
gram#1[6] E --> { _rndvel(50)  _vel(80) a a a a a b b b b b}

COMMENT:
This grammar demonstrates _srand and _randomize.  (Type cmd-R to produce several items.) The random sequences derived from A are always different because of the
"_randomize" procedure placed on top of the grammar.  The two sequences derived from C also vary from one item to the next because of the "_randomize" tool that precedes them.
The sequences derived from B and D are always identical because they are "labelled" by instructions "_srand(x)" with x = 1 in both cases.
Part E is a demo of random velocities applied to sound-objects 'a' (which accepts velocity changes) and 'b' (which doesn't).  Note that "_srand" is unable to reset sequences of random velocities.